name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types: ["labeled", "opened", "reopened", "synchronize"]
  release:
    types: ["published"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  frontend-checks:
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'release' || github.event_name == 'workflow_dispatch') || github.event_name == 'push' }}
    strategy:
      matrix:
        app: ["core/ui", "friendshipper", "birdie"]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Package "core-ui" if needed
        run: |
          cd core/ui
          yarn
          yarn package

      - name: Lint ${{ matrix.app }}
        run: |
          cd ${{ matrix.app }}
          yarn
          yarn lint

  build-linux:
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'release' || github.event_name == 'workflow_dispatch') || github.event_name == 'push' }}
    runs-on:
      group: ethos-linux
    strategy:
      matrix:
        app: [friendshipper, birdie]
    permissions:
      contents: write

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libwebkit2gtk-4.1-dev \
          build-essential \
          curl \
          wget \
          file \
          libssl-dev \
          libxdo-dev \
          libgtk-3-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev

      - name: set up rust toolchain
        uses: believer-oss/setup-rust-toolchain@ff4c7a2d9523e22eab355f13c7732a4ea3e7a9b1

      - name: set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: "${{ matrix.app }}/yarn.lock"

      - name: Check format and linting
        run: |
          mkdir -p ${{ matrix.app }}/build
          cargo fmt -p ethos-core -- --check
          cargo fmt -p ${{ matrix.app }} -- --check 
          cargo clippy --all-features -p ethos-core -- -D warnings
          cargo clippy --all-features -p ${{ matrix.app }} -- -D warnings

      - name: Run unit tests
        run: |
          cargo test --verbose --release -p ethos-core
          cargo test --verbose --release --bin ${{ matrix.app }}

      - name: Build core ui
        run: |
          cd core/ui
          yarn
          yarn package

      - name: Build
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cd ${{ matrix.app }}
          yarn
          yarn tauri:build

      - name: Rename
        if: ${{ startsWith(github.ref, format('refs/tags/{0}', matrix.app)) }}
        run: |
          ls -ltr target/release
          # capitalize first letter
          capital_app=$(echo ${{ matrix.app }} | awk '{print toupper(substr($0, 1, 1)) substr($0, 2)}')
          mv target/release/${capital_app} ${{ matrix.app }}-linux-amd64

      - name: Release
        if: ${{ startsWith(github.ref, format('refs/tags/{0}', matrix.app)) }}
        uses: believer-oss/action-gh-release@ab50eebb6488051c6788d97fa95232267c6a4e23
        with:
          files: |
            ${{ matrix.app }}-linux-amd64

  build-windows:
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'release' || github.event_name == 'workflow_dispatch') || github.event_name == 'push' }}
    runs-on:
      group: ethos-windows
    strategy:
      matrix:
        app: [friendshipper, birdie]
    permissions:
      contents: write

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: set up rust toolchain
        uses: believer-oss/setup-rust-toolchain@87cb4b395294936a824ba840af04318e5e6eb8f6

      - name: set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: "${{ matrix.app }}/yarn.lock"

      - name: Check format and linting
        run: |
          mkdir -p ${{ matrix.app }}/build
          cargo fmt -p ethos-core -- --check
          cargo fmt -p ${{ matrix.app }} -- --check 
          cargo clippy --all-features -p ethos-core -- -D warnings
          cargo clippy --all-features -p ${{ matrix.app }} -- -D warnings

      - name: Run unit tests
        run: |
          cargo test --verbose --release -p ethos-core
          cargo test --verbose --release --bin ${{ matrix.app }}

      - name: Build core ui
        run: |
          cd core/ui
          yarn
          yarn package

      - name: Build
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cd ${{ matrix.app }}
          yarn
          yarn tauri:build

      - name: Rename
        if: ${{ startsWith(github.ref, format('refs/tags/{0}', matrix.app)) }}
        run: |
          dir target/release
          mv target/release/${{ matrix.app }}.exe ${{ matrix.app }}.exe
          mv target/release/bundle/msi/*.msi .

      - name: Release
        uses: believer-oss/action-gh-release@ab50eebb6488051c6788d97fa95232267c6a4e23
        if: ${{ startsWith(github.ref, format('refs/tags/{0}', matrix.app)) }}
        env:
          REF: ${{ github.ref_name }}
        with:
          files: |
            ${{ matrix.app }}.exe

  build-f11r-server:
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'release' || github.event_name == 'workflow_dispatch') || github.event_name == 'push' }}
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: believer-oss/f11r-server
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install ubuntu dependencies
        if: ${{ startsWith(github.ref, format('refs/tags/{0}', matrix.app)) }}
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libwebkit2gtk-4.1-dev \
          build-essential \
          curl \
          wget \
          file \
          libssl-dev \
          libxdo-dev \
          libgtk-3-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev

      - name: set up rust toolchain
        if: ${{ startsWith(github.ref, format('refs/tags/{0}', matrix.app)) }}
        uses: believer-oss/setup-rust-toolchain@ff4c7a2d9523e22eab355f13c7732a4ea3e7a9b1

      - name: Check format and linting
        if: ${{ startsWith(github.ref, format('refs/tags/{0}', matrix.app)) }}
        run: |
          cargo fmt -p friendshipper-server -- --check
          cargo clippy --all-features -p friendshipper-server -- -D warnings

      - name: Run unit tests
        if: ${{ startsWith(github.ref, format('refs/tags/{0}', matrix.app)) }}
        run: |
          cargo test --verbose --release -p friendshipper-server
